{
	"name": "vscode-akkasls-tools",
	"displayName": "Akka Serverless Tools for VSCode",
	"description": "Develop, deploy, and manage Akka Serverless services",
	"version": "0.4.0",
	"publisher": "lightbend-labs",
	"homepage": "https://github.com/lightbend/vscode-akkasls-tools",
	"repository": {
		"type": "git",
		"url": "https://github.com/lightbend/vscode-akkasls-tools"
	},
	"engines": {
		"vscode": "^1.60.0"
	},
	"license": "MIT",
	"categories": [
		"Programming Languages",
		"Other"
	],
	"keywords": [
		"akka",
		"serverless",
		"akka serverless",
		"lightbend",
		"java",
		"javascript"
	],
	"icon": "resources/icon.png",
	"activationEvents": [
		"onView:as.toolsExplorer",
		"onView:as.statusExplorer",
		"onView:as.accountExplorer",
		"onView:as.tokenExplorer",
		"onView:as.projectExplorer",
		"onCommand:as.commandpalette.auth.login",
		"onCommand:as.commandpalette.browser.console",
		"onCommand:as.commandpalette.browser.documentation",
		"onCommand:as.commandpalette.browser.forum",
		"onCommand:as.commandpalette.browser.ideas",
		"onCommand:as.commandpalette.browser.statuspage",
		"onCommand:as.commandpalette.quickstart"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "Akka Serverless",
			"properties": {
				"akkaserverless.dryrun": {
					"type": "boolean",
					"default": false,
					"description": "Whether commands will be printed in the logs rather than execute them"
				},
				"akkaserverless.silent": {
					"type": "boolean",
					"default": false,
					"description": "Whether commands executed should write to stdout"
				},
				"akkaserverless.configFile": {
					"type": "string",
					"default": null,
					"description": "Location of the config file to use (default ~/.akkaserverless/config.yaml)"
				},
				"akkaserverless.context": {
					"type": "string",
					"default": null,
					"description": "The context to use"
				},
				"akkaserverless.enableExperimentalFeatures": {
					"type": "boolean",
					"default": false,
					"description": "Whether experimental features should be enabled"
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "as",
					"title": "Akka Serverless",
					"icon": "resources/akka-icon-reverse.svg"
				}
			]
		},
		"views": {
			"as": [
				{
					"id": "as.projectExplorer",
					"name": "Projects",
					"description": "This view controls all your projects, services, invites and members, and container registries. It is your one-stop-shop to manage and control your projects"
				},
				{
					"id": "as.accountExplorer",
					"name": "Account",
					"description": "This view shows the account data for the user that is currently logged in"
				},
				{
					"id": "as.tokenExplorer",
					"name": "Tokens",
					"description": "This view shows all tokens that are currently active for the user"
				},
				{
					"id": "as.statusExplorer",
					"name": "Status",
					"description": "This view shows tatus information on the Akka Serverless platform"
				},
				{
					"id": "as.toolsExplorer",
					"name": "Tools",
					"description": "This view goves an overview of the tools needed to build and deploy apps for Akka Serverless"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "as.projectExplorer.refresh",
					"when": "view == as.projectExplorer",
					"group": "navigation"
				},
				{
					"command": "as.projectExplorer.addProject",
					"when": "view == as.projectExplorer",
					"group": "navigation"
				},
				{
					"command": "as.accountExplorer.refresh",
					"when": "view == as.accountExplorer",
					"group": "navigation"
				},
				{
					"command": "as.tokenExplorer.refresh",
					"when": "view == as.tokenExplorer",
					"group": "navigation"
				},
				{
					"command": "as.tokenExplorer.add",
					"when": "view == as.tokenExplorer",
					"group": "navigation"
				},
				{
					"command": "as.statusExplorer.refresh",
					"when": "view == as.statusExplorer",
					"group": "navigation"
				},
				{
					"command": "as.toolsExplorer.refresh",
					"when": "view == as.toolsExplorer",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "as.projectExplorer.addRegistryCredentials",
					"when": "view == as.projectExplorer && viewItem == Credentials"
				},
				{
					"command": "as.projectExplorer.deleteRegistryCredentials",
					"when": "view == as.projectExplorer && viewItem == Credentials"
				},
				{
					"command": "as.projectExplorer.credentialsInfo",
					"when": "view == as.projectExplorer && viewItem == Credentials"
				},
				{
					"command": "as.projectExplorer.addInvite",
					"when": "view == as.projectExplorer && viewItem == Invites"
				},
				{
					"command": "as.projectExplorer.deleteInvite",
					"when": "view == as.projectExplorer && viewItem == Invites"
				},
				{
					"command": "as.projectExplorer.inviteInfo",
					"when": "view == as.projectExplorer && viewItem == Invites"
				},
				{
					"command": "as.projectExplorer.deployService",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.deleteService",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.unexposeService",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.exposeService",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.serviceLogs",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.serviceInfo",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.deleteProject",
					"when": "view == as.projectExplorer && viewItem == Projects"
				},
				{
					"command": "as.projectExplorer.projectInfo",
					"when": "view == as.projectExplorer && viewItem == Projects"
				},
				{
					"command": "as.projectExplorer.memberInfo",
					"when": "view == as.projectExplorer && viewItem == Members"
				},
				{
					"command": "as.tokenExplorer.info",
					"when": "view == as.tokenExplorer"
				},
				{
					"command": "as.tokenExplorer.revoke",
					"when": "view == as.tokenExplorer",
					"group": "1"
				},
				{
					"command": "as.statusExplorer.info",
					"when": "view == as.statusExplorer"
				},
				{
					"command": "as.toolsExplorer.info",
					"when": "view == as.toolsExplorer"
				}
			],
			"commandPalette": [
				{
					"command": "as.projectExplorer.addRegistryCredentials",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.deleteRegistryCredentials",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.credentialsInfo",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.addInvite",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.deleteInvite",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.inviteInfo",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.deployService",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.deleteService",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.unexposeService",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.exposeService",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceLogs",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceInfo",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.deleteProject",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.projectInfo",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.memberInfo",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.tokenExplorer.info",
					"when": "view == as.tokenExplorer"
				},
				{
					"command": "as.tokenExplorer.revoke",
					"when": "view == as.tokenExplorer"
				},
				{
					"command": "as.statusExplorer.info",
					"when": "view == as.statusExplorer"
				},
				{
					"command": "as.toolsExplorer.info",
					"when": "view == as.toolsExplorer"
				}
			]
		},
		"commands": [
			{
				"command": "as.projectExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the project explorer"
			},
			{
				"command": "as.projectExplorer.addRegistryCredentials",
				"title": "Add registry credentials",
				"description": "Add new credentials for a container registry"
			},
			{
				"command": "as.projectExplorer.deleteRegistryCredentials",
				"title": "Remove registry credentials",
				"description": "Remove credentials for a container registry"
			},
			{
				"command": "as.projectExplorer.credentialsInfo",
				"title": "Show details",
				"description": "Show registry credential details"
			},
			{
				"command": "as.projectExplorer.addInvite",
				"title": "Invite user",
				"description": "Invite a new user to your project"
			},
			{
				"command": "as.projectExplorer.deleteInvite",
				"title": "Delete invite",
				"description": "Delete a previously sent invite"
			},
			{
				"command": "as.projectExplorer.inviteInfo",
				"title": "Show details",
				"description": "Show invite details"
			},
			{
				"command": "as.projectExplorer.addProject",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.svg",
					"dark": "resources/dark/add.svg"
				},
				"description": "Add a new project"
			},
			{
				"command": "as.projectExplorer.deployService",
				"title": "Deploy service",
				"description": "Deploy a new service"
			},
			{
				"command": "as.projectExplorer.deleteService",
				"title": "Delete service",
				"description": "Delete a service"
			},
			{
				"command": "as.projectExplorer.exposeService",
				"title": "Expose service",
				"description": "Add an HTTP endpoint to your service"
			},
			{
				"command": "as.projectExplorer.unexposeService",
				"title": "Unexpose service",
				"description": "Remove an HTTP endpoint from your service"
			},
			{
				"command": "as.projectExplorer.serviceLogs",
				"title": "Logs",
				"description": "Show the logs of a service based on selected parameters"
			},
			{
				"command": "as.projectExplorer.serviceInfo",
				"title": "Show details",
				"description": "Show service details"
			},
			{
				"command": "as.projectExplorer.deleteProject",
				"title": "Delete project",
				"description": "Delete a project and all related data"
			},
			{
				"command": "as.projectExplorer.projectInfo",
				"title": "Show details",
				"description": "Show project details"
			},
			{
				"command": "as.projectExplorer.memberInfo",
				"title": "Show details",
				"description": "Show the details of a project member"
			},
			{
				"command": "as.accountExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the account explorer"
			},
			{
				"command": "as.tokenExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the token explorer"
			},
			{
				"command": "as.tokenExplorer.info",
				"title": "Show token details",
				"description": "Print the details of an authentication token"
			},
			{
				"command": "as.tokenExplorer.revoke",
				"title": "Revoke",
				"description": "Revoke a selected authentication token"
			},
			{
				"command": "as.tokenExplorer.add",
				"title": "Add",
				"icon": {
					"light": "resources/light/add.svg",
					"dark": "resources/dark/add.svg"
				},
				"description": "Add a new token"
			},
			{
				"command": "as.statusExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the status explorer"
			},
			{
				"command": "as.statusExplorer.info",
				"title": "Open status page",
				"description": "Open the Akka Serverless status page in your browser"
			},
			{
				"command": "as.toolsExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the status explorer"
			},
			{
				"command": "as.toolsExplorer.info",
				"title": "Get info",
				"description": "Open the info page for a tool in a browser window"
			},
			{
				"command": "as.commandpalette.auth.login",
				"title": "Log in",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless Console to log in and authenticate the CLI"
			},
			{
				"command": "as.commandpalette.browser.console",
				"title": "Open console",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless Console in a browser window"
			},
			{
				"command": "as.commandpalette.browser.documentation",
				"title": "Open docs",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless documentation in a browser window"
			},
			{
				"command": "as.commandpalette.browser.forum",
				"title": "Open forum",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless forum in a browser window"
			},
			{
				"command": "as.commandpalette.browser.ideas",
				"title": "Open ideas portal",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless ideas portal in a browser window"
			},
			{
				"command": "as.commandpalette.browser.statuspage",
				"title": "Open status page",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless status page in a browser window"
			},
			{
				"command": "as.commandpalette.quickstart",
				"title": "Download Quickstart",
				"category": "Akka Serverless",
				"description": "Download an Akka Serverless quickstart"
			}
		],
		"snippets": [
			{
				"language": "proto3",
				"path": "./snippets/proto3.code-snippets"
			},
			{
				"language": "javascript",
				"path": "./snippets/javascript.code-snippets"
			},
			{
				"language": "typescript",
				"path": "./snippets/typescript.code-snippets"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"test-compile": "tsc -p ./",
		"build": "npm run -S esbuild-base -- --sourcemap",
		"watch": "npm run -S esbuild-base -- --sourcemap --watch",
		"pretest": "npm run test-compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"installer": "vsce package && zip vscode-akkasls-tools-$npm_package_version.zip vscode-akkasls-tools-$npm_package_version.vsix README.md",
		"readme": "ts-node utils/readme.ts",
		"depcheck": "npx depcheck",
		"release": "standard-version && npm run installer && git push --follow-tags origin main"
	},
	"devDependencies": {
		"@types/chai": "^4.2.22",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "14.x",
		"@types/vscode": "^1.60.0",
		"@typescript-eslint/eslint-plugin": "^4.26.0",
		"@typescript-eslint/parser": "^4.26.0",
		"chai": "^4.3.4",
		"esbuild": "^0.13.2",
		"eslint": "^7.27.0",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"standard-version": "^9.3.1",
		"ts-loader": "^9.2.6",
		"ts-node": "^10.2.1",
		"typescript": "^4.3.2",
		"vscode-test": "^1.5.2"
	},
	"dependencies": {
		"exec-sh": "^0.4.0",
		"got": "^11.8.2",
		"table": "^6.7.1"
	}
}
