{
	"name": "vscode-akkasls-tools",
	"displayName": "Akka Serverless Tools for VSCode",
	"description": "Develop, deploy, and manage Akka Serverless apps",
	"version": "0.2.3",
	"publisher": "lightbend-labs",
	"engines": {
		"vscode": "^1.56.0"
	},
	"license": "MIT",
	"categories": [
		"Programming Languages",
		"Other"
	],
	"keywords": [
		"akka",
		"serverless",
		"akka serverless",
		"lightbend",
		"java",
		"javascript"
	],
	"icon": "resources/icon.png",
	"activationEvents": [
		"onCommand:as.commandpalette.auth.login",
		"onCommand:as.commandpalette.browser.console",
		"onCommand:as.commandpalette.browser.documentation",
		"onCommand:as.commandpalette.browser.forum",
		"onCommand:as.commandpalette.browser.ideas",
		"onCommand:as.commandpalette.browser.statuspage",
		"onCommand:as.commandpalette.entities.generateNpx",
		"onCommand:as.commandpalette.entities.generateNpm",
		"onCommand:as.commandpalette.entities.generateMaven",
		"onView:as.toolsExplorer",
		"onView:as.statusExplorer",
		"onView:as.accountExplorer",
		"onView:as.projectExplorer"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "Akka Serverless",
			"properties": {
				"akkaserverless.dryrun": {
					"type": "boolean",
					"default": false,
					"description": "Whether commands will be printed in the logs rather than execute them"
				},
				"akkaserverless.logOutput": {
					"type": "boolean",
					"default": false,
					"description": "Whether the result of the akkasls command is shown in the logs"
				},
				"akkaserverless.configFile": {
					"type": "string",
					"default": null,
					"description": "Location of the config file to use (default ~/.akkaserverless/config.yaml)"
				},
				"akkaserverless.context": {
					"type": "string",
					"default": null,
					"description": "The context to use"
				},
				"akkaserverless.enableExperimentalFeatures": {
					"type": "boolean",
					"default": false,
					"description": "Whether experimental features should be enabled"
				}
			}
		},
		"views": {
			"as": [
				{
					"id": "as.projectExplorer",
					"name": "Projects"
				},
				{
					"id": "as.accountExplorer",
					"name": "Account & Tokens"
				},
				{
					"id": "as.statusExplorer",
					"name": "Status"
				},
				{
					"id": "as.toolsExplorer",
					"name": "Tools"
				}
			]
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "as",
					"title": "Akka Serverless",
					"icon": "resources/akka-icon-reverse.svg"
				}
			]
		},
		"menus": {
			"view/title": [
				{
					"command": "as.toolsExplorer.refresh",
					"when": "view == as.toolsExplorer",
					"group": "navigation"
				},
				{
					"command": "as.statusExplorer.refresh",
					"when": "view == as.statusExplorer",
					"group": "navigation"
				},
				{
					"command": "as.accountExplorer.refresh",
					"when": "view == as.accountExplorer",
					"group": "navigation"
				},
				{
					"command": "as.accountExplorer.tokenCreate",
					"when": "view == as.accountExplorer",
					"group": "0"
				},
				{
					"command": "as.projectExplorer.refresh",
					"when": "view == as.projectExplorer",
					"group": "navigation"
				},
				{
					"command": "as.projectExplorer.projectCreate",
					"when": "view == as.projectExplorer",
					"group": "0"
				}
			],
			"view/item/context": [
				{
					"command": "as.toolsExplorer.info",
					"when": "view == as.toolsExplorer && viewItem == Tools"
				},
				{
					"command": "as.statusExplorer.info",
					"when": "view == as.statusExplorer"
				},
				{
					"command": "as.accountExplorer.tokenInfo",
					"when": "view == as.accountExplorer && viewItem == Tokens",
					"group": "0"
				},
				{
					"command": "as.accountExplorer.tokenRevoke",
					"when": "view == as.accountExplorer && viewItem == Tokens",
					"group": "1"
				},
				{
					"command": "as.projectExplorer.info",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceLogs",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.serviceCreate",
					"when": "view == as.projectExplorer && viewItem != Credentials && viewItem != Invites && viewItem != Members"
				},
				{
					"command": "as.projectExplorer.serviceDelete",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.serviceExpose",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.serviceUnexpose",
					"when": "view == as.projectExplorer && viewItem == Services"
				},
				{
					"command": "as.projectExplorer.registryCredentialsCreate",
					"when": "view == as.projectExplorer && viewItem != Services && viewItem != Invites && viewItem != Members"
				},
				{
					"command": "as.projectExplorer.registryCredentialsDelete",
					"when": "view == as.projectExplorer && viewItem == Credentials"
				},
				{
					"command": "as.projectExplorer.inviteCreate",
					"when": "view == as.projectExplorer && viewItem != Services && viewItem != Credentials && viewItem != Members"
				},
				{
					"command": "as.projectExplorer.inviteDelete",
					"when": "view == as.projectExplorer && viewItem == Invites"
				}
			],
			"commandPalette": [
				{
					"command": "as.toolsExplorer.info",
					"when": "view == as.toolsExplorer"
				},
				{
					"command": "as.accountExplorer.tokenInfo",
					"when": "view == as.accountExplorer"
				},
				{
					"command": "as.accountExplorer.tokenRevoke",
					"when": "view == as.accountExplorer"
				},
				{
					"command": "as.accountExplorer.tokenCreate",
					"when": "view == as.accountExplorer"
				},
				{
					"command": "as.projectExplorer.info",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceLogs",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.projectCreate",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceCreate",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceDelete",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceExpose",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.serviceUnexpose",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.registryCredentialsCreate",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.registryCredentialsDelete",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.inviteCreate",
					"when": "view == as.projectExplorer"
				},
				{
					"command": "as.projectExplorer.inviteDelete",
					"when": "view == as.projectExplorer"
				}
			]
		},
		"commands": [
			{
				"command": "as.commandpalette.auth.login",
				"title": "Log in",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless Console to log in and authenticate the CLI"
			},
			{
				"command": "as.commandpalette.browser.console",
				"title": "Open console",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless Console in a browser window"
			},
			{
				"command": "as.commandpalette.browser.documentation",
				"title": "Open docs",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless documentation in a browser window"
			},
			{
				"command": "as.commandpalette.browser.forum",
				"title": "Open forum",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless forum in a browser window"
			},
			{
				"command": "as.commandpalette.browser.ideas",
				"title": "Open ideas portal",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless ideas portal in a browser window"
			},
			{
				"command": "as.commandpalette.browser.statuspage",
				"title": "Open status page",
				"category": "Akka Serverless",
				"description": "Open the Akka Serverless status page in a browser window"
			},
			{
				"command": "as.commandpalette.entities.generateNpx",
				"title": "Generate new Javascript service (npx) - experimental",
				"category": "Akka Serverless",
				"description": "Generate a new Javascript based service using npx"
			},
			{
				"command": "as.commandpalette.entities.generateNpm",
				"title": "Generate new Javascript service (npm) - experimental",
				"category": "Akka Serverless",
				"description": "Generate a new Javascript based service using npm"
			},
			{
				"command": "as.commandpalette.entities.generateMaven",
				"title": "Generate new Java service (Maven) - experimental",
				"category": "Akka Serverless",
				"description": "Generate a new Java based service using Maven"
			},
			{
				"command": "as.toolsExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the tools explorer"
			},
			{
				"command": "as.toolsExplorer.info",
				"title": "Get info",
				"description": "Open the info page for a tool in a browser window"
			},
			{
				"command": "as.statusExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the status explorer"
			},
			{
				"command": "as.statusExplorer.info",
				"title": "Get info",
				"description": "Open the Akka Serverless status page in your browser"
			},
			{
				"command": "as.accountExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the account explorer"
			},
			{
				"command": "as.accountExplorer.tokenInfo",
				"title": "Show details",
				"description": "Show the details of the authentication token"
			},
			{
				"command": "as.accountExplorer.tokenRevoke",
				"title": "Revoke",
				"description": "Revoke a selected authentication token"
			},
			{
				"command": "as.accountExplorer.tokenCreate",
				"title": "Create a new token",
				"description": "Create a new authentication token"
			},
			{
				"command": "as.projectExplorer.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				},
				"description": "Refresh the project explorer"
			},
			{
				"command": "as.projectExplorer.info",
				"title": "Show details",
				"description": "Show the details of the current selected item"
			},
			{
				"command": "as.projectExplorer.serviceLogs",
				"title": "Logs",
				"description": "Show the logs of a service based on selected parameters"
			},
			{
				"command": "as.projectExplorer.projectCreate",
				"title": "Create a new project",
				"description": "Create a new project"
			},
			{
				"command": "as.projectExplorer.serviceCreate",
				"title": "Deploy service",
				"description": "Deploy a new service"
			},
			{
				"command": "as.projectExplorer.serviceDelete",
				"title": "Delete service",
				"description": "Delete an existing service"
			},
			{
				"command": "as.projectExplorer.serviceExpose",
				"title": "Expose service",
				"description": "Expose an existing service to the Internet"
			},
			{
				"command": "as.projectExplorer.serviceUnexpose",
				"title": "Unexpose service",
				"description": "Remove a hostname from a service"
			},
			{
				"command": "as.projectExplorer.registryCredentialsCreate",
				"title": "Add registry credentials",
				"description": "Add new credentials for a container registry"
			},
			{
				"command": "as.projectExplorer.registryCredentialsDelete",
				"title": "Delete registry credentials",
				"description": "Remove credentials for a container registry"
			},
			{
				"command": "as.projectExplorer.inviteCreate",
				"title": "Invite user",
				"description": "Invite a new user to your project"
			},
			{
				"command": "as.projectExplorer.inviteDelete",
				"title": "Delete invitation",
				"description": "Delete a previously sent invitation"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production --config ./utils/webpack.build.config.js",
		"compile": "webpack --devtool nosources-source-map --config ./utils/webpack.build.config.js",
		"lint": "eslint src --ext ts",
		"pretest": "npm run test-compile && npm run lint",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"utils:depcheck": "npx depcheck",
		"utils:installer": "ts-node ./utils/generateInstaller.ts",
		"utils:readme": "ts-node ./utils/generateReadMe.ts",
		"watch": "webpack --watch --devtool nosources-source-map --config ./utils/webpack.build.config.js",
		"release": "standard-version && npm run utils:installer && git push --follow-tags origin main"
	},
	"devDependencies": {
		"@types/shelljs": "^0.8.8",
		"@types/tmp": "^0.2.0",
		"@types/vscode": "^1.56.0",
		"@typescript-eslint/eslint-plugin": "^4.26.0",
		"@typescript-eslint/eslint-plugin-tslint": "^4.26.0",
		"@typescript-eslint/parser": "^4.26.0",
		"eslint": "^7.27.0",
		"standard-version": "^9.3.0",
		"ts-loader": "^9.2.2",
		"ts-node": "^10.0.0",
		"typescript": "^4.3.2",
		"webpack": "5.38.1",
		"webpack-cli": "^4.7.0"
	},
	"homepage": "https://github.com/lightbend-labs/vscode-akkasls-tools",
	"repository": {
		"type": "git",
		"url": "https://github.com/lightbend-labs/vscode-akkasls-tools"
	},
	"dependencies": {
		"axios": "^0.21.1",
		"cli-table3": "^0.6.0",
		"shelljs": "^0.8.4",
		"tmp": "^0.2.1"
	}
}
